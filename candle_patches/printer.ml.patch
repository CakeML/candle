19c19
<   let charcode s = Char.code(String.get s 0) in
---
>   let charcode s = Char.ord (String.sub s 0) in
28,41c28,41
<   let ctable = Array.make csetsize 0 in
<   do_list (fun c -> Array.set ctable (charcode c) 1) (explode spaces);
<   do_list (fun c -> Array.set ctable (charcode c) 2) (explode separators);
<   do_list (fun c -> Array.set ctable (charcode c) 4) (explode brackets);
<   do_list (fun c -> Array.set ctable (charcode c) 8) (explode symbs);
<   do_list (fun c -> Array.set ctable (charcode c) 16) (explode alphas);
<   do_list (fun c -> Array.set ctable (charcode c) 32) (explode nums);
<   let isspace c = Array.get ctable (charcode c) = 1
<   and issep c  = Array.get ctable (charcode c) = 2
<   and isbra c  = Array.get ctable (charcode c) = 4
<   and issymb c = Array.get ctable (charcode c) = 8
<   and isalpha c = Array.get ctable (charcode c) = 16
<   and isnum c = Array.get ctable (charcode c) = 32
<   and isalnum c = Array.get ctable (charcode c) >= 16 in
---
>   let ctable = Array.array csetsize 0 in
>   do_list (fun c -> Array.update ctable (charcode c) 1) (explode spaces);
>   do_list (fun c -> Array.update ctable (charcode c) 2) (explode separators);
>   do_list (fun c -> Array.update ctable (charcode c) 4) (explode brackets);
>   do_list (fun c -> Array.update ctable (charcode c) 8) (explode symbs);
>   do_list (fun c -> Array.update ctable (charcode c) 16) (explode alphas);
>   do_list (fun c -> Array.update ctable (charcode c) 32) (explode nums);
>   let isspace c = Array.sub ctable (charcode c) = 1
>   and issep c  = Array.sub ctable (charcode c) = 2
>   and isbra c  = Array.sub ctable (charcode c) = 4
>   and issymb c = Array.sub ctable (charcode c) = 8
>   and isalpha c = Array.sub ctable (charcode c) = 16
>   and isnum c = Array.sub ctable (charcode c) = 32
>   and isalnum c = Array.sub ctable (charcode c) >= 16 in
87c87
<      x < y || x = y && a > b || x = y && a = b && s < t in
---
>      x < y || x = y && String.(>) a b || x = y && a = b && String.(<) s t in
107,110d106
< include Format;;
< 
< set_max_boxes 100;;
< 
251,252c247,248
<                let ccs = map (String.make 1 o Char.chr o code_of_term) tms in
<                let s = "\"" ^ String.escaped (implode ccs) ^ "\"" in
---
>                let ccs = map (String.str o Char.chr o code_of_term) tms in
>                let s = "\"" ^ string_escaped (implode ccs) ^ "\"" in
540,544c536,540
< let print_type = pp_print_type std_formatter;;
< let print_qtype = pp_print_qtype std_formatter;;
< let print_term = pp_print_term std_formatter;;
< let print_qterm = pp_print_qterm std_formatter;;
< let print_thm = pp_print_thm std_formatter;;
---
> let print_type = Pretty.print_stdout pp_print_type;;
> let print_qtype = Pretty.print_stdout pp_print_qtype;;
> let print_term = Pretty.print_stdout pp_print_term;;
> let print_qterm = Pretty.print_stdout pp_print_qterm;;
> let print_thm = Pretty.print_stdout pp_print_thm;;
550,552c546,549
< #install_printer pp_print_qtype;;
< #install_printer pp_print_qterm;;
< #install_printer pp_print_thm;;
---
> let pp_type = Pretty_printer.token o Pretty.print_to_string pp_print_qtype;;
> let pp_hol_type = pp_type;;
> let pp_term = Pretty_printer.token o Pretty.print_to_string pp_print_qterm;;
> let pp_thm = Pretty_printer.token o Pretty.print_to_string pp_print_thm;;
557,570d553
< 
< let print_to_string printer =
<   let buf = Buffer.create 16 in
<   let fmt = formatter_of_buffer buf in
<   let () = pp_set_max_boxes fmt 100 in
<   let print = printer fmt in
<   let flush = pp_print_flush fmt in
<   fun x ->
<     let () = pp_set_margin fmt (get_margin ()) in
<     let () = print x in
<     let () = flush () in
<     let s = Buffer.contents buf in
<     let () = Buffer.reset buf in
<     s;;
