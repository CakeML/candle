24a25,29
> let pp_exn e =
>   match e with
>   | Noparse -> Pretty_printer.token "Noparse"
>   | _ -> pp_exn e;;
> 
125c130
<          String.make 1 (Char.chr(int_of_string("0x"^h^l))),rst
---
>          String.str (Char.chr(int_of_string("0x"^h^l))),rst
127c132
<          String.make 1 (Char.chr(int_of_string(a^b^c))),rst
---
>          String.str (Char.chr(int_of_string(a^b^c))),rst
182c187
<   let mk_prefinty:num->pretype =
---
>   let (mk_prefinty:num->pretype) =
288c293,295
<   let pdest_eq (Combp(Combp(Varp(("="|"<=>"),_),l),r)) = l,r in
---
>   let pdest_eq t =
>     match t with
>     | Combp(Combp(Varp(("="|"<=>"),_),l),r) -> l,r in
322,323c329,330
<     let ns = map (fun i -> Char.code(String.get s i))
<                  (0--(String.length s - 1)) in
---
>     let ns = map (fun i -> Char.ord (String.sub s i))
>                  (0--(String.size s - 1)) in
364,367c371,374
<       Ident s::rst when String.length s >= 2 &&
<                         String.sub s 0 1 = "\"" &&
<                         String.sub s (String.length s - 1) 1 = "\""
<        -> String.sub s 1 (String.length s - 2),rst
---
>       Ident s::rst when String.size s >= 2 &&
>                         String.sub s 0 = '"' &&
>                         String.sub s (String.size s - 1) = '"'
>        -> String.substring s 1 (String.size s - 2),rst
385c392
<               let n_d = power_num (Int 10) (Int (String.length r0)) in
---
>               let n_d = power_num (Int 10) (Int (String.size r0)) in
515,517c522,524
<         not(String.length s >= 2 &&
<             String.sub s 0 1 = "\"" &&
<             String.sub s (String.length s - 1) 1 = "\"")
---
>         not(String.size s >= 2 &&
>             String.sub s 0 = '"' &&
>             String.sub s (String.size s - 1) = '"')
